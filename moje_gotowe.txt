function onOpen() {
  const ui = SpreadsheetApp.getUi();
  const menu = ui.createMenu('Docs_UA');
  menu.addItem('Create New Docs_UA', 'createNewGoogleDocs')
  menu.addToUi();
}

function createNewGoogleDocs() {
  //This value should be the id of your document template that we created in the last step
  const googleDocTemplate = DriveApp.getFileById('1A2d9UeqatTw_wvgC7P-Cw4Fq5grSZq_MRDqKdMpWSqE');
  
  //This value should be the id of the folder where you want your completed documents stored
  const destinationFolder = DriveApp.getFolderById('17KIOypcT8ktErRoZonrg_w4CYdrBWsjP')
  //Here we store the sheet as a variable
  const sheet = SpreadsheetApp
    .getActiveSpreadsheet()
    .getSheetByName('UA')
  
  //Now we get all of the values as a 2D array
  const rows = sheet.getDataRange().getValues();
  
  //Start processing each spreadsheet row
  rows.forEach(function(row, index){
    //Here we check if this row is the headers, if so we skip it
    if (index === 0) return;
    //Here we check if a document has already been generated by looking at 'Document Link', if so we skip it
    if (row[2]) return;
    //Using the row data in a template literal, we make a copy of our template document in our destinationFolder
    const copy = googleDocTemplate.makeCopy(`${row[4]}, ${row[3]} Umowa` , destinationFolder)
    //Once we have the copy, we then open it using the DocumentApp
    const doc = DocumentApp.openById(copy.getId())
    //All of the content lives in the body, so we get that for editing
    const body = doc.getBody();
    //In this line we do some friendly date formatting, that may or may not work for you locale
    const friendlyDate = new Date(row[5]).toLocaleDateString();
    
    //In these lines, we replace our replacement tokens with values from our spreadsheet row
    body.replaceText('{{id}}', row[1]);
    body.replaceText('{{first}}', row[3]);
    body.replaceText('{{last}}', row[4]);
    body.replaceText('{{date}}', friendlyDate);
    body.replaceText('{{gender}}', row[6]);
    body.replaceText('{{pesel}}', row[7]);
    body.replaceText('{{region}}', row[8]);
    body.replaceText('{{refugee}}', row[9]);
    body.replaceText('{{d}}', row[12]);
    body.replaceText('{{school}}', row[11]);
    body.replaceText('{{tryb}}', row[10]);
    body.replaceText('{{np}}', row[13]);
    body.replaceText('{{przyczyna_np}}', row[14]);
    body.replaceText('{{pz}}', row[15]);
    body.replaceText('{{jakie_pz}}', row[16]);
    body.replaceText('{{tz}}', row[17]);
    body.replaceText('{{jakie_tz}}', row[18]);
    body.replaceText('{{iz}}', row[19]);
    body.replaceText('{{jakie_iz}}', row[20]);
    body.replaceText('{{op_first}}', row[21]);
    body.replaceText('{{op_last}}', row[22]);
    body.replaceText('{{op_adress}}', row[23]);
    body.replaceText('{{op_pesel}}', row[24]);
    body.replaceText('{{op_phone}}', row[25]);
    body.replaceText('{{op_mail}}', row[26]);
    body.replaceText('{{agree}}', row[27]);
    body.replaceText('{{op2_first}}', row[28]);
    body.replaceText('{{op2_last}}', row[29]);
    body.replaceText('{{op2_phone}}', row[30]);
    body.replaceText('{{op2_pesel}}', row[31]);
    body.replaceText('{{op3_first}}', row[33]);
    body.replaceText('{{op3_last}}', row[34]);
    body.replaceText('{{op3_phone}}', row[35]);
    body.replaceText('{{op3_pesel}}', row[36]);
    body.replaceText('{{op4_first}}', row[38]);
    body.replaceText('{{op4_last}}', row[39]);
    body.replaceText('{{op4_phone}}', row[40]);
    body.replaceText('{{op4_pesel}}', row[41]);

    
    //We make our changes permanent by saving and closing the document
    doc.saveAndClose();
    //Store the url of our new document in a variable
    const url = doc.getUrl();
    //Write that value back to the 'Document Link' column in the spreadsheet. 
    sheet.getRange(index + 1, 3).setValue(url)
    
  })
  
}